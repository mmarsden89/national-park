{"version":3,"sources":["Components/Footer/Footer.js","Components/Header/Header.js","Components/NavBar/NavBar.js","Components/Scroll/Scroll.js","apiConfig.js","SinglePark.js","Components/Parks.js","Admin/CreateParks.js","App.js","index.js"],"names":["Footer","className","href","target","rel","Header","src","alt","Component","withRouter","props","useAuth0","loginWithRedirect","logout","isAuthenticated","user","onClick","icon","faSignInAlt","picture","nickname","faSignOutAlt","returnTo","window","location","Scroll","showUnder","duration","easing","style","transitionDuration","faCaretSquareUp","apiUrls","apiUrl","hostname","SinglePark","state","park","axios","this","response","setState","data","image","loading","name","established","area","rec_visitors","description","Parks","useState","parks","setParks","filter","setFilter","modal","setModal","selectedTarget","setSelectedTarget","list","userState","setUserState","userParkList","setUserParkList","getParks","isLoading","a","parkResponse","getUser","userResponse","createUser","useEffect","url","method","openModal","event","currentTarget","id","addPark","updated","push","handleVisit","removePark","item","handleRemoveVisit","filler","buttonsHTML","includes","_id","parksHTML","map","key","faMinusCircle","faPlusCircle","thumbnail","parksData","require","App","appJsx","BrowserRouter","domain","clientId","redirectUri","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86720ea3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\">\n      <a href=\"https://mmarsden89.github.io\" target=\"_blank\">\n        Portfolio\n      </a>\n      <p>Â© Matt Marsden 2020</p>\n      <a\n        href=\"mailto:mmarsden89@gmail.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Email\n      </a>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from 'react'\n\nconst headerImage = \"https://img.pngio.com/forest-silhouette-png-101-images-in-collection-page-2-forest-silhouette-png-1400_471.png\"\n\nclass Header extends Component {\n\n\n  render () {\n    return (\n      <div className=\"header-app\">\n        <img src={headerImage}\n          alt=\"\"\n          className=\"image-header\"/>\n        <h1 className=\"logo-text\">NATIONAL PARKS</h1>\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport \"./Navbar.scss\";\n\nconst NavBar = (props) => {\n  const { loginWithRedirect, logout, isAuthenticated, user } = useAuth0();\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-container\">\n        {!isAuthenticated && (\n          <div className=\"signin-area\">\n            <label className=\"nickname signin\" onClick={loginWithRedirect}>\n              Sign In\n            </label>\n            <FontAwesomeIcon\n              icon={faSignInAlt}\n              className=\"signout\"\n              onClick={loginWithRedirect}\n            />\n          </div>\n        )}\n        {isAuthenticated && (\n          <div className=\"profile-area\">\n            <img\n              src={user.picture}\n              alt={user.nickname}\n              className=\"profile-image\"\n            />\n            <label className=\"nickname\">{user.nickname}</label>\n            <FontAwesomeIcon\n              icon={faSignOutAlt}\n              onClick={() => logout({ returnTo: window.location.href })}\n              className=\"signout\"\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"gradient\"></div>\n    </nav>\n  );\n};\n\nexport default withRouter(NavBar);\n","import React from \"react\";\nimport ScrollToTop from \"react-scroll-up\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretSquareUp } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Scroll.scss\";\n\nconst Scroll = () => {\n  return (\n    <ScrollToTop\n      showUnder={160}\n      duration={1500}\n      easing={\"easeInOutCubic\"}\n      style={{ transitionDuration: \"1s\" }}\n    >\n      <FontAwesomeIcon icon={faCaretSquareUp} className=\"scrollUp\" />\n    </ScrollToTop>\n  );\n};\n\nexport default Scroll;\n","let apiUrl\nconst apiUrls = {\n  production: 'https://national-parks-mm.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport apiUrl from \"./apiConfig\";\n\nclass SinglePark extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      park: {},\n    };\n  }\n\n  async componentDidMount() {\n    const response = await axios(`${apiUrl}/parks/${this.props.target}`);\n    this.setState({ park: response.data.park });\n  }\n\n  render() {\n    const { park } = this.state;\n    return (\n      <div className=\"park-modal\">\n        <div className=\"single-park-flex\">\n          <div className=\"park-image-container\">\n            <img\n              src={park.image}\n              alt=\"temp\"\n              className=\"modal-image\"\n              loading=\"lazy\"\n            />\n          </div>\n          <div className=\"park-info\">\n            <h3 className=\"modal-header\">{park.name}</h3>\n            <h6 className=\"modal-sub-header\">\n              <i>{park.location}</i>\n            </h6>\n            <div className=\"modal-resp\">\n              <p className=\"info thirty-padding-top est\">\n                <b>Established: </b>\n                {park.established}\n              </p>\n              <p className=\"info area\">\n                <b>Area: </b>\n                {park.area}\n              </p>\n              <p className=\"info vis\">\n                <b>Total Visitors: </b>\n                {park.rec_visitors}\n              </p>\n            </div>\n            <p className=\"modal-park-desc\">{park.description}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SinglePark;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SinglePark from \"../SinglePark\";\nimport apiUrl from \"../apiConfig\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Parks = (props) => {\n  const [parks, setParks] = useState([]);\n  const [filter, setFilter] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [selectedTarget, setSelectedTarget] = useState(\"\");\n  const [userState, setUserState] = useState({ list: [] });\n  const [userParkList, setUserParkList] = useState([]);\n\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const getParks = async () => {\n    const parkResponse = await axios(`${apiUrl}/parks`);\n    setParks(parkResponse.data.parks);\n    setFilter(parkResponse.data.parks);\n  };\n\n  const getUser = async () => {\n    if (isAuthenticated) {\n      try {\n        const userResponse = await axios(`${apiUrl}/users/${user.nickname}`);\n        setUserState(userResponse.data.user);\n        setUserParkList(userResponse.data.user.list);\n      } catch (err) {\n        await createUser();\n        await getUser();\n      }\n    }\n  };\n\n  useEffect(() => {\n    getParks();\n    getUser();\n  }, [user]);\n\n  const createUser = async () => {\n    await axios({\n      url: apiUrl + \"/users\",\n      method: \"POST\",\n      data: {\n        user: {\n          nickname: user.nickname,\n        },\n      },\n    });\n  };\n\n  const openModal = (event) => {\n    setModal(!modal);\n    setSelectedTarget(event.currentTarget.id);\n  };\n\n  const closeModal = () => {\n    if (modal) {\n      setModal(false);\n    }\n  };\n\n  const addPark = async (id) => {\n    let updated = [...userParkList];\n    setUserParkList((userParkList) => [...userParkList, id]);\n    updated.push(id);\n    return updated;\n  };\n\n  const handleVisit = async (event) => {\n    const id = event.currentTarget.id;\n    await axios({\n      url: apiUrl + `/users/${user.nickname}`,\n      method: \"PATCH\",\n      data: {\n        user: {\n          list: await addPark(id),\n        },\n      },\n    });\n  };\n\n  const removePark = async (id) => {\n    let updated = [...userParkList].filter((item) => item !== id);\n    setUserParkList(userParkList.filter((item) => item !== id));\n    return updated;\n  };\n\n  const handleRemoveVisit = async (event) => {\n    const id = event.currentTarget.id;\n    await axios({\n      url: apiUrl + `/users/${user.nickname}`,\n      method: \"PATCH\",\n      data: {\n        user: {\n          list: await removePark(id),\n        },\n      },\n    });\n  };\n\n  const visited = () => {\n    const updated = parks.filter((park) => {\n      return userParkList.includes(park._id);\n    });\n    setFilter(updated);\n  };\n\n  const notVisited = () => {\n    const updated = parks.filter((park) => {\n      return !userParkList.includes(park._id);\n    });\n    setFilter(updated);\n  };\n\n  const all = () => {\n    setFilter(parks);\n  };\n\n  const { list } = userState;\n  const filler = <div className=\"filler\"></div>;\n  const buttonsHTML = (\n    <div className=\"filter-buttons-div\">\n      <button onClick={all} className=\"filter-buttons\">\n        All\n      </button>\n      <button onClick={visited} className=\"filter-buttons\">\n        Visted\n      </button>\n      <button onClick={notVisited} className=\"filter-buttons\">\n        Not-Visited\n      </button>\n    </div>\n  );\n  const parksHTML = filter.map((park) => (\n    <div key={`${park._id}-park`} id={`${park._id}-div`} className=\"parks\">\n      {isAuthenticated ? (\n        userParkList.includes(park._id) ? (\n          <button onClick={handleRemoveVisit} id={park._id}>\n            <FontAwesomeIcon icon={faMinusCircle} className=\"plusOrMinus\" />\n          </button>\n        ) : (\n          <button onClick={handleVisit} id={park._id}>\n            <FontAwesomeIcon icon={faPlusCircle} className=\"plusOrMinus\" />\n          </button>\n        )\n      ) : null}\n      <div className=\"park-container\" onClick={openModal} id={park._id}>\n        <div className=\"mob-img\">\n          <img\n            src={park.thumbnail}\n            alt={\"thumbnail of \" + park.name}\n            className=\"park-thumbnail\"\n            loading=\"lazy\"\n          />\n        </div>\n        <div className=\"info-grid\">\n          <p className=\"park-name\">{park.name} National Park</p>\n          <p className=\"info\">\n            {\" \"}\n            <b>Location:</b> {park.location} <b>Founded:</b> {park.established}\n          </p>\n          <p className=\"info\">\n            {\" \"}\n            <b>Total Area:</b> {park.area} <b>Total Visitors:</b>{\" \"}\n            {park.rec_visitors}\n          </p>\n          <p className=\"info desc\">{park.description}</p>\n        </div>\n      </div>\n    </div>\n  ));\n  return (\n    <div className=\"container\" onClick={closeModal}>\n      {isAuthenticated ? buttonsHTML : filler}\n      {parksHTML}\n      {modal ? <SinglePark target={selectedTarget} /> : null}\n    </div>\n  );\n};\n\nexport default Parks;\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport apiUrl from '../apiConfig'\nconst parksData = require('../parks.json')\n\nclass CreateParks extends Component {\n  constructor (props) {\n    super(props)\n\n  this.state = {\n    parks: []\n  }\n}\n\n  async componentDidMount () {\n    const response = await axios(`${apiUrl}/parks`)\n    this.setState({ parks: response.data.parks })\n  }\n\n  updateParks = () => {\n    const { parks } = this.state\n    for (let i =  0; i < this.state.parks.length; i++) {\n      if (parks[i].name === parksData[i].Name) {\n        axios({\n          url: apiUrl + '/parks/' + parks[i]._id,\n          method: 'PATCH',\n          data: {\n            park: {\n              thumbnail: parksData[i].Thumbnail\n            }\n          }\n        })\n      }\n    }\n  }\n\n  sendParks() {\n    parksData.forEach(park => {\n      axios({\n        url: apiUrl + '/parks',\n        method: 'POST',\n        data: {\n          park: {\n            name: park.Name,\n            image: park.Image,\n            thumbnail: park.Thumbnail,\n            location: park.Location,\n            established: park.Established,\n            area: park.Area,\n            rec_visitors: park['Recreation visitors'],\n            description: park.Description\n          }\n        }\n      })\n    })\n  }\n\n\n  render () {\n    return (\n      <div>\n        <button onClick={this.sendParks}>Send Park</button>\n      </div>\n    )\n  }\n}\n\nexport default CreateParks\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { Header, Footer, NavBar, Scroll, Parks } from \"./Components/index.js\";\n\n// Admin\nimport CreateParks from \"./Admin/CreateParks\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Scroll />\n        <div className=\"App-body\">\n          <Header />\n          <Parks />\n        </div>\n        {/* <CreateParks /> */}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst appJsx = (\n  <BrowserRouter>\n    <Auth0Provider\n      domain=\"dev-0r9j-iz3.auth0.com\"\n      clientId=\"1HbLQ6nRcscQnN2UY5i79et3CRBQq3zQ\"\n      redirectUri={window.location.href}\n    >\n      <App />\n    </Auth0Provider>\n  </BrowserRouter>\n);\n\nReactDOM.render(appJsx, document.getElementById(\"root\"));\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import App from \"./App\";\n// import { Auth0Provider } from \"@auth0/auth0-react\";\n\n// ReactDOM.render(\n//   <Auth0Provider\n//     domain=\"dev-0r9j-iz3.auth0.com\"\n//     clientId=\"1HbLQ6nRcscQnN2UY5i79et3CRBQq3zQ\"\n//     redirectUri={window.location.origin}\n//   >\n//     <App />\n//   </Auth0Provider>,\n//   document.getElementById(\"root\")\n// );\n"],"sourceRoot":""}